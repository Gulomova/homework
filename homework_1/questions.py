# Question 4

#Напишите программу, которая принимает последовательность разделенных запятыми чисел с консоли и генерирует
# список и кортеж, который содержит каждое число.
#Предположим, что в программу введены следующие данные:
#34,67,55,33,12,98
#
#Тогда вывод должен быть:
#['34', '67', '55', '33', '12', '98']
#(«34», «67», «55», «33», «12», «98»)
#
#подсказки:
#В случае ввода входных данных в вопрос, он должен быть консольным.
#Метод tuple () может преобразовать список в кортеж
# ==================================================================================================================

# values = raw_input()
# l = values.split(",")
# t = tuple(l)
# print (l)
# print (t)

# Question 5

# Определите класс, который имеет как минимум два метода:
# getString: получить строку из консоли ввода
# printString: печатать строку в верхнем регистре.
#
# Также, пожалуйста, включите простую функцию тестирования для проверки методов класса.
#
# подсказки:
# Используйте метод __init__ для построения некоторых параметров
#
#
# ================================================== ===================
# class IOstring():
#     def __init__(self):
#         pass
#
#     def getString(self):
#         self.s = input()
#
#     def printString(self):
#         print(self.s.upper())
#
# xx = IOstring()
# xx.getString()
# xx.printString()

# Question 6

# Напишите программу, которая рассчитывает и печатает значение по заданной формуле:
# Q = квадратный корень из [(2 * C * D) / H]
#
# Ниже приведены фиксированные значения C и H:
# С 50. Н 30.
#
# D - это переменная, значения которой должны вводиться в вашу программу в последовательности через запятую.
#
# пример
# Предположим, что программе задана следующая разделенная запятыми последовательность ввода:
# 100150180
#
# Выходные данные программы должны быть:
# 18,22,24
#
# подсказки:
# Если полученный вывод представлен в десятичной форме, он должен быть округлен до ближайшего значения
# (например, если полученный вывод равен 26.0, он должен быть напечатан как 26)
# В случае ввода входных данных в вопрос, он должен быть консольным.
#
#
# ================================================== ===================

# from math import *
#
# C,H = 50,30
#
# def calc(D):
#     return sqrt((2*C*D)/H)
#
# D = input().split(',')
# D = [int(i) for i in D]
# D = [calc(i) for i in D]
# D = [round(i) for i in D]
# D = [str(i) for i in D]
#
# print(",".join(D))

# Question 7

# Напишите программу, которая принимает 2 цифры, X, Y в качестве входных данных и генерирует 2-мерный массив.
# Значение элемента в i-й строке и j-м столбце массива должно быть i * j.
# Примечание: i = 0,1 .., X-1; J = 0,1, ¡Y-1.
#
# пример
# Предположим, что следующие входные данные даны программе:
# 3,5
#
# Тогда вывод программы должен быть:
# [[0, 0, 0, 0, 0], [0, 1, 2, 3, 4], [0, 2, 4, 6, 8]]
#
# подсказки:
# Примечание. В случае ввода входных данных в вопрос, предполагается, что это консольный ввод в виде запятой.
# ===============================================================================================================

# x, y = map(int, input().split(','))
# lst = []
#
# for i in range(x):
#     tmp = []
#     for j in range(y):
#         tmp.append(i * j)
#     lst.append(tmp)
#
# print(lst)
#
# # Question 8
#
# #Напишите программу, которая принимает последовательность слов через запятую в качестве входных данных и печатает
# # слова в последовательности через запятую после сортировки по алфавиту.
# #Предположим, что в программу введены следующие данные:
# #без, привет, мешок, мир
#
# #Тогда вывод должен быть:
# #мешок, привет, без, мир
#
# #подсказки:
# #В случае ввода входных данных в вопрос, он должен быть консольным.
#
#
# # ================================================================================================================
#
# lst = input().split(',')
# lst.sort()
# print(",".join(lst))
#
# # Question 9
#
# #Напишите программу, которая принимает последовательность строк в качестве входных данных и печатает
# #строки после того, как все символы в предложении пишутся с большой буквы.
# #Предположим, что в программу введены следующие данные:
# #Привет, мир
# #Практика делает совершенным
#
# #Тогда вывод должен быть:
# #ПРИВЕТ, МИР
# #ПРАКТИКА ДЕЛАЕТ ОТЛИЧНО
#
# #подсказки:
# #В случае ввода входных данных в вопрос, он должен быть консольным.
#
# #==========================================================================================================
#
# s = raw_input()
# words = [word for word in s.split(" ")]
# print(" ".join(sorted(list(set(words)))))
#
# #  Question 10
#
# # Напишите программу, которая принимает последовательность слов, разделенных пробелами, в качестве входных
# # данных и печатает слова после удаления всех повторяющихся слов и сортировки их в алфавитно-цифровом порядке.
# # Предположим, что в программу введены следующие данные:
# # Привет, мир и практика снова делают идеальным и Привет, мир!
# #
# # Тогда вывод должен быть:
# # еще раз и привет делает идеальный мир практики
# #
# # подсказки:
# # В случае ввода входных данных в вопрос, он должен быть консольным.
# # Мы используем set container для автоматического удаления дублированных данных, а затем используем
# # sorted () для сортировки данных.
# #
# #
# # ===================================================================================================
#
# word = input().split()
#
# for i in word:
#     if word.count(i) > 1:    #count function returns total repeatation of an element that is send as argument
#         word.remove(i)     # removes exactly one element per call
#
# word.sort()
# print(" ".join(word))
#
# #  Question 11
#
# # Напишите программу, которая принимает последовательность двоичных чисел, разделенных запятыми, в качестве входных
# # данных, а затем проверяет, делятся ли они на 5 или нет. Числа, которые делятся на 5, должны быть напечатаны в
# # последовательности через запятую.
# #
# # Пример:
# # 0100,0011,1010,1001
# #
# # Тогда вывод должен быть:
# # 1010
# #
# # Заметки:
# # Предположим, что данные вводятся с консоли.
# #
# # подсказки:
# # В случае ввода входных данных в вопрос, он должен быть консольным.
# #==============================================================================================================
#
# def check(x):
#     total,pw = 0,1
#     reversed(x)
#
#     for i in x:
#         total+=pw * (ord(i) - 48)
#         pw*=2
#     return total % 5
#
# data = input().split(",")
# lst = []
#
# for i in data:
#     if check(i) == 0:
#         lst.append(i)
#
# print(",".join(lst))
#
# #  Question 12
#
# # Напишите программу, которая найдет все такие числа от 1000 до 3000 (оба включены), чтобы каждая цифра
# # числа была четным числом.
# # Полученные числа должны быть напечатаны через запятую в одной строке.
# #
# # подсказки:
# # В случае ввода входных данных в вопрос, он должен быть консольным.
# # ======================================================================================================
#
# lst = []
#
# for i in range(1000,3001):
#     flag = 1
#     for j in str(i):
#         if ord(j)%2 != 0:
#             flag = 0
#     if flag == 1:
#         lst.append(str(i))
#
# print(",".join(lst))
#
# #  Question 13
#
# # Напишите программу, которая принимает предложение и рассчитывает количество букв и цифр.
# # Предположим, что в программу введены следующие данные:
# # Привет, мир! 123
# #
# # Тогда вывод должен быть:
# # ПИСЬМА 10
# # ЦИФРЫ 3
# #
# # подсказки:
# # В случае ввода входных данных в вопрос, он должен быть консольным.
# # ================================================================================================================
#
# word = input()
# letter,digit = 0,0
#
# for i in word:
#     if ('a'<=i and i<='z') or ('A'<=i and i<='Z'):
#         letter+=1
#     if '0'<=i and i<='9':
#         digit+=1
#
# print("LETTERS {0}\nDIGITS {1}".format(letter,digit))
#
# #   Question 14
#
# # Напишите программу, которая принимает предложение и рассчитывает количество букв верхнего и нижнего регистра.
# # Предположим, что в программу введены следующие данные:
# # Привет, мир!
# #
# # Тогда вывод должен быть:
# # ВЕРХНИЙ СЛУЧАЙ 1
# # НИЖНИЙ ДЕЛО 9
# #
# # подсказки:
# # В случае ввода входных данных в вопрос, он должен быть консольным.
# # ============================================================================================================
#
# word = input()
# upper,lower = 0,0
#
# for i in word:
#     if 'a'<=i and i<='z' :
#         lower+=1
#     if 'A'<=i and i<='Z':
#         upper+=1
#
# print("UPPER CASE {0}\nLOWER CASE {1}".format(upper,lower))
#
# #   Question 15
#
# # Напишите программу, которая вычисляет значение a + aa + aaa + aaaa с заданной цифрой в качестве значения a.
# # Предположим, что в программу введены следующие данные:
# # 9
# #
# # Тогда вывод должен быть:
# # 11106
# #
# # подсказки:
# # В случае ввода входных данных в вопрос, он должен быть консольным.
#
# #============================================================================================================
#
# a = input()
# total,tmp = 0,str()
#
# for i in range(4):
#     tmp+=a
#     total+=int(tmp)
#
# print(total)
#
# #  Question 16
#
# # Используйте понимание списка, чтобы возвести в квадрат каждое нечетное число в списке.
# # Список вводится последовательностью чисел, разделенных запятыми.
# # Предположим, что в программу введены следующие данные:
# # 1,2,3,4,5,6,7,8,9
# #
# # Тогда вывод должен быть:
# # 1,3,5,7,9
# #
# # подсказки:
# # В случае ввода входных данных в вопрос, он должен быть консольным.
#
# # =============================================================================================================
#
# lst = [str(int(i)**2) for i in input().split(',') if int(i) % 2]
# print(",".join(lst))
#
# #  Question 17
#
# # Напишите программу, которая вычисляет чистую сумму банковского счета на основе журнала транзакций с консоли.
# # Формат журнала транзакций отображается следующим образом:
# # Д 100
# # W 200
# # D означает депозит, а W означает вывод.
# # Предположим, что в программу введены следующие данные:
# # D 300
# # D 300
# # W 200
# # Д 100
# #
# # Тогда вывод должен быть:
# # 500
# #
# # подсказки:
# # В случае ввода входных данных в вопрос, он должен быть консольным.
# # ================================================================================================================
#
# total = 0
# while True:
#     s = input().split()
#     if not s:
#         break
#     cm,num = map(str,s)
#
#     if cm=='D':
#         total+=int(num)
#     if cm=='W':
#         total-=int(num)
#
# print(total)
#
# #  Question 18
#
# # Веб-сайт требует, чтобы пользователи вводили имя пользователя и пароль для регистрации. Напишите программу
# # для проверки правильности ввода пароля пользователями.
# # Ниже приведены критерии для проверки пароля:
# # 1. Как минимум 1 буква между [a-z]
# # 2. Как минимум 1 число между [0-9]
# # 1. Как минимум 1 буква между [A-Z]
# # 3. Как минимум 1 символ из [$ # @]
# # 4. Минимальная длина пароля транзакции: 6
# # 5. Максимальная длина пароля транзакции: 12
# # Ваша программа должна принять последовательность паролей, разделенных запятыми, и проверит их в соответствии
# # с вышеуказанными критериями. Пароли, которые соответствуют критериям, должны быть напечатаны,
# # каждый из которых разделен запятой.
# #
# # пример
# # Если в качестве входных данных для программы указаны следующие пароли:
# # ABd1234 @ 1, a F1 #, 2w3E *, 2We3345
# #
# # Тогда вывод программы должен быть:
# # ABd1234 @ 1
# #
# # подсказки:
# # В случае ввода входных данных в вопрос, он должен быть консольным.
# # ================================================================================================================
#
# def is_low(x):
#     for i in x:
#         if 'a'<=i and i<='z':
#             return True
#     return  False
#
# def is_up(x):
#     for i in x:
#         if 'A'<= i and i<='Z':
#             return True
#     return  False
#
# def is_num(x):
#     for i in x:
#         if '0'<=i and i<='9':
#             return True
#     return  False
#
# def is_other(x):
#     for i in x:
#         if i=='$' or i=='#' or i=='@':
#             return True
#     return False
#
# s = input().split(',')
# lst = []
#
# for i in s:
#     length = len(i)
#     if 6 <= length and length <= 12 and is_low(i) and is_up(i) and is_num(i) and is_other(i):
#         lst.append(i)
#
# print(",".join(lst))
#
# #  Question 19
#
# # Вы должны написать программу для сортировки кортежей (имя, возраст, рост) по возрастанию,
# # где имя - это строка, возраст и рост - это числа. Кортежи вводятся консолью. Критерии сортировки:
# # 1: сортировка по имени;
# # 2: затем сортировать по возрасту;
# # 3: тогда сортируйте счетом
# # Приоритет это имя> возраст> оценка.
# # Если в качестве входных данных для программы заданы следующие кортежи:
# # Том, 19,80
# # Джон, 20,90
# # Jony, 17,91
# # Jony, 17,93
# # Json, 21,85
# #
# # Тогда вывод программы должен быть:
# # [(«Джон», «20», «90»), («Джони», «17», «91»), («Джони», «17», «93»), («Джон», «21 ',' 85 '), (' Том ',' 19 ',' 80 ')]
# #
# # подсказки:
# # В случае ввода входных данных в вопрос, он должен быть консольным.
# # Мы используем itemgetter для включения нескольких ключей сортировки.
#
# # ================================================================================================================
#
# lst = []
# while True:
#     s = input().split(',')
#     if not s[0]:
#         break
#     lst.append(tuple(s))
#
# lst.sort(key= lambda x:(x[0],x[1],x[2]))
# print(lst)
#
# #  Question 20
#
# # Определите класс с генератором, который может повторять числа, которые делятся на 7, между заданным диапазоном 0 и n.
# #
# # подсказки:
# # Рассмотрим использование доходности
# #
# #
# # =================================================================================================================
#
# class Test:
#     def generator(self,n):
#         return [i for i in range(n) if i%7==0]
#
# n = int(input())
# num = Test()
# lst = num.generator(n)
# print(lst)